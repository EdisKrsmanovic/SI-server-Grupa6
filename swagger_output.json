{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Grupa 6 - API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "https://si-2021.167.99.244.168.nip.io:3333",
  "basePath": "/",
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints for user authentication"
    },
    {
      "name": "Password reset",
      "description": "Endpoints for resetting the password"
    },
    {
      "name": "User details",
      "description": "Endpoints for getting and setting user information"
    },
    {
      "name": "User roles",
      "description": "Endpoints for getting and setting user roles"
    },
    {
      "name": "User CRUD",
      "description": "Endpoints for user CRUD"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Endpoint for logging in",
        "parameters": [
          {
            "name": "userInfo",
            "in": "body",
            "description": "User login information.",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "email"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "accessToken"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Accepted"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "The password is incorrect"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User does not exist"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Unauthorized"
          }
        }
      }
    },
    "/jwt/verify": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Endpoint for verifying the access token",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "number"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "roleId": {
                  "type": "string",
                  "example": "number"
                },
                "groupId": {
                  "type": "string",
                  "example": "number"
                },
                "accessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/QRcode": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "QrSecret": {
                  "type": "string",
                  "example": "string"
                },
                "QRcode": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/QRcode/save": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "userInfo",
            "in": "body",
            "description": "User QR Code information.",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "QrSecret": {
                  "type": "string",
                  "example": "string"
                },
                "token": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid code"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/QRcode/verify": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "userInfo",
            "in": "body",
            "description": "User QR Code information.",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid code"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User does not exist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/HelloWorld": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/github_deployment": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string",
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/forgotPassword": {
      "put": {
        "tags": [
          "Password reset"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userInfo",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully sent. Change the password within 10 minutes"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to get user's email. Incorrect email!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          }
        }
      }
    },
    "/changePassword/{token}": {
      "put": {
        "tags": [
          "Password reset"
        ],
        "description": "",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userInfo",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully changed password."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to updates user's password."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/answerCheck": {
      "post": {
        "tags": [
          "Password reset"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userInfo",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "answers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "QuestionId": {
                        "type": "string",
                        "example": "number"
                      },
                      "Answer": {
                        "type": "string",
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "correctAnswers": {
                  "type": "string",
                  "example": "true"
                },
                "token": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User does not exist"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Unauthorized"
          }
        }
      }
    },
    "/AllSecurityQuestions": {
      "get": {
        "tags": [
          "Password reset"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "QuestionId": {
                    "type": "string",
                    "example": "integer"
                  },
                  "Question": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to get security questions."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          }
        }
      }
    },
    "/User/AllQuestions": {
      "post": {
        "tags": [
          "Password reset"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userInfo",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "QuestionId": {
                    "type": "string",
                    "example": "integer"
                  },
                  "Question": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to get security questions."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          }
        }
      }
    },
    "/setSecurityQuestionsAndAnswers": {
      "post": {
        "tags": [
          "Password reset"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "userInfo",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "QuestionId": {
                    "type": "string",
                    "example": "number"
                  },
                  "Answer": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully added user's questions and answers."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to add user's questions and answers"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Answers must not be empty."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/newPhoneNumber": {
      "put": {
        "tags": [
          "User details"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "userInfo",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "phone": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully sent. Confirm the number change within the next 10 minutes."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Incorrect email."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/phone-confirmation/{token}": {
      "get": {
        "tags": [
          "User details"
        ],
        "description": "",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to update user's phone number."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/checkPassword": {
      "post": {
        "tags": [
          "User details"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "userInfo",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "The password is incorrect"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/checkIfEmailExists": {
      "post": {
        "tags": [
          "User details"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userInfo",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "exists": {
                  "type": "string",
                  "example": "true"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "exists": {
                  "type": "string",
                  "example": "false"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          }
        }
      }
    },
    "/checkIfEmailVerified": {
      "post": {
        "tags": [
          "User details"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userInfo",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Email doesn't exist"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          }
        }
      }
    },
    "/sendVerificationEmail": {
      "put": {
        "tags": [
          "User details"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "userInfo",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully sent. Verify your e-mail in 24h"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to get user's email"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/verifyEmail/{token}": {
      "put": {
        "tags": [
          "User details"
        ],
        "description": "",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully verified email."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User doesn't exist"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/getUserDetails": {
      "get": {
        "tags": [
          "User details"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "lastname": {
                  "type": "string",
                  "example": "string"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "phone": {
                  "type": "string",
                  "example": "string"
                },
                "address": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/setUserDetails": {
      "post": {
        "tags": [
          "User details"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "userInfo",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "lastname": {
                  "type": "string",
                  "example": "string"
                },
                "address": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/Roles/GetAll": {
      "get": {
        "tags": [
          "User roles"
        ],
        "description": "Endpoint for getting all roles",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "RoleId": {
                    "type": "number",
                    "example": 2
                  },
                  "Name": {
                    "type": "string",
                    "example": "MonitorSuperAdmin"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to get roles."
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User does not have a SuperAdmin role!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Forbidden"
          }
        }
      }
    },
    "/User/CreateNew": {
      "post": {
        "tags": [
          "User CRUD"
        ],
        "description": "Endpoint for creating a new user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "User",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "lastname": {
                  "type": "string",
                  "example": "string"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "phone": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                },
                "roleId": {
                  "type": "string",
                  "example": "number"
                },
                "groupId": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully created a new user."
                },
                "userId": {
                  "type": "string",
                  "example": "number"
                },
                "newAccessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User does not have a SuperAdmin role!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to insert user into database. Reason: "
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/User/Get": {
      "get": {
        "tags": [
          "User CRUD"
        ],
        "description": "Endpoint for getting user\\'s info",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "UserId": {
                      "type": "string",
                      "example": "number"
                    },
                    "Name": {
                      "type": "string",
                      "example": "string"
                    },
                    "Lastname": {
                      "type": "string",
                      "example": "string"
                    },
                    "Email": {
                      "type": "string",
                      "example": "string"
                    },
                    "Phone": {
                      "type": "string",
                      "example": "string"
                    },
                    "RoleId": {
                      "type": "string",
                      "example": "number"
                    },
                    "GroupId": {
                      "type": "string",
                      "example": "number"
                    }
                  }
                },
                "newAccessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "204": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No user was found with given userId."
                },
                "newAccessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "No Content"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "You must provide userId query param!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User does not have a SuperAdmin role!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Forbidden"
          }
        }
      }
    },
    "/User/Update": {
      "put": {
        "tags": [
          "User CRUD"
        ],
        "description": "Endpoint for updating user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "User",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "number"
                },
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "lastname": {
                  "type": "string",
                  "example": "string"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "phone": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                },
                "roleId": {
                  "type": "string",
                  "example": "number"
                },
                "groupId": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully updated user."
                },
                "newAccessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "You must provide userId in body!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User does not have a SuperAdmin role!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to update user. Reason: string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/User/Delete": {
      "delete": {
        "tags": [
          "User CRUD"
        ],
        "description": "Endpoint for deleting user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully deleted user!"
                },
                "newAccessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "204": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No users were deleted."
                },
                "newAccessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "No Content"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "You must provide userId query param!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User does not have a SuperAdmin role!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to remove user. Reason: string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/User/GetAll": {
      "get": {
        "tags": [
          "User CRUD"
        ],
        "description": "Endpoint for getting all users",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "UserId": {
                        "type": "number",
                        "example": 3
                      },
                      "Name": {
                        "type": "string",
                        "example": "Osoba1"
                      },
                      "Lastname": {
                        "type": "string",
                        "example": "Osobić"
                      },
                      "Email": {
                        "type": "string",
                        "example": "osoba1@email.com"
                      },
                      "Phone": {
                        "type": "string",
                        "example": "061111111"
                      },
                      "RoleId": {
                        "type": "number",
                        "example": 1
                      },
                      "Password": {
                        "type": "string",
                        "example": "string"
                      },
                      "QrSecret": {
                        "type": "string",
                        "example": "null"
                      },
                      "Address": {
                        "type": "string",
                        "example": "null"
                      },
                      "EmailVerified": {
                        "type": "string",
                        "example": "null"
                      }
                    }
                  }
                },
                "newAccessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User does not have a SuperAdmin role!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to get users. Reason: "
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/User/SetRole": {
      "post": {
        "tags": [
          "User CRUD"
        ],
        "description": "Endpoint for setting user\\'s role",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "Body data",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "number"
                },
                "roleId": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully assigned user role"
                },
                "newAccessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "204": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No user was found with given userId."
                },
                "newAccessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "No Content"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User does not have a SuperAdmin role!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to update user's role. Reason: "
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/User/SetGroup": {
      "post": {
        "tags": [
          "User CRUD"
        ],
        "description": "Endpoint for setting user\\'s group",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "Body data",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "type": "object",
              "properties": {
                "groupId": {
                  "type": "string",
                  "example": "number"
                },
                "roleId": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully changed user's group."
                },
                "newAccessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          },
          "204": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No user was found with given userId."
                },
                "newAccessToken": {
                  "type": "string",
                  "example": "string"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "No Content"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User does not have a SuperAdmin role!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error while trying to add user's group. Reason: "
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {}
}